{
    "openapi": "3.0.3",
    "info": {
        "title": "WingTechBot MK3 API",
        "version": "1.0.0",
        "description": "A robust Discord bot API built with Express.js, TypeScript, and hexagonal architecture",
        "contact": { "name": "WingTechBot MK3", "url": "https://github.com/ellman12/WingTechBot-MK3" },
        "license": { "name": "ISC", "url": "https://opensource.org/licenses/ISC" }
    },
    "servers": [
        { "url": "http://localhost:3000", "description": "Development server" },
        { "url": "https://api.wingtechbot.com", "description": "Production server" }
    ],
    "tags": [{ "name": "Health", "description": "Health check endpoints" }],
    "paths": {
        "/health": {
            "get": {
                "summary": "Health check endpoint",
                "tags": ["Health"],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "schema": { "type": "object", "properties": { "status": { "type": "string", "const": "ok" }, "timestamp": { "type": "string" } }, "required": ["status", "timestamp"], "additionalProperties": false },
                                    "components": {}
                                }
                            }
                        }
                    },
                    "400": { "description": "Validation error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ApiError" } } } },
                    "500": { "description": "Internal server error", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ApiError" } } } }
                },
                "description": "Returns the current health status of the API"
            }
        }
    },
    "components": {
        "schemas": {
            "ApiError": {
                "type": "object",
                "description": "Standard API error response",
                "properties": {
                    "success": { "type": "boolean", "enum": [false] },
                    "error": { "type": "string", "description": "Error message" },
                    "details": {
                        "type": "array",
                        "items": { "type": "object", "properties": { "path": { "type": "string", "description": "Field path" }, "message": { "type": "string", "description": "Error message" } }, "required": ["path", "message"] },
                        "description": "Validation error details"
                    }
                },
                "required": ["success", "error"]
            },
            "GetHealthResponse": {
                "schema": { "type": "object", "properties": { "status": { "type": "string", "const": "ok" }, "timestamp": { "type": "string" } }, "required": ["status", "timestamp"], "additionalProperties": false },
                "components": {}
            }
        }
    }
}
