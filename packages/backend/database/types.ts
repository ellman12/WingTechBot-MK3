/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */
import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U> ? ColumnType<S, I | undefined, U> : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Messages {
    author_id: string;
    channel_id: string;
    content: string;
    created_at: Generated<Timestamp>;
    edited_at: Timestamp | null;
    id: string;
    referenced_message_id: string | null;
}

export interface ReactionEmotes {
    created_at: Generated<Timestamp>;
    discord_id: string | null;
    id: Generated<number>;
    karma_value: Generated<number>;
    name: string;
    updated_at: Generated<Timestamp>;
}

export interface Reactions {
    channel_id: string;
    emote_id: number;
    giver_id: string;
    id: Generated<number>;
    message_id: string;
    receiver_id: string;
}

export interface Sounds {
    created_at: Generated<Timestamp>;
    id: Generated<number>;
    name: string;
    path: string;
}

export interface SoundSoundtags {
    created_at: Generated<Timestamp>;
    id: Generated<number>;
    sound: Generated<number>;
    tag: Generated<number>;
}

export interface Soundtags {
    created_at: Generated<Timestamp>;
    id: Generated<number>;
    name: string;
}

export interface Users {
    avatar: string | null;
    created_at: Generated<Timestamp>;
    display_name: string | null;
    id: string;
    is_bot: Generated<boolean>;
    updated_at: Generated<Timestamp>;
    username: string;
}

export interface DB {
    messages: Messages;
    reaction_emotes: ReactionEmotes;
    reactions: Reactions;
    sound_soundtags: SoundSoundtags;
    sounds: Sounds;
    soundtags: Soundtags;
    users: Users;
}
