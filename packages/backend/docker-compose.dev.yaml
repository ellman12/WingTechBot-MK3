version: '3.8'

services:
  app:
    build:
      context: .
      target: development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://wingtechbot:wingtechbot_password@postgres:5433/wingtechbot
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
      - PORT=3000
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      app-network:
        condition: service_started

  # Production-like service for testing
  app-prod:
    build:
      context: .
      target: production
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://wingtechbot:wingtechbot_password@postgres:5433/wingtechbot
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_GUILD_ID=${DISCORD_GUILD_ID}
      - PORT=3000
    networks:
      - app-network
    restart: unless-stopped
    depends_on:
      app-network:
        condition: service_started
    profiles:
      - production

volumes:
  node_modules:

networks:
  app-network:
    external: true 